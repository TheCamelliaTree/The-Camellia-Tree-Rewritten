/* Global things */
body {
	color: var(--color);
	overflow: hidden;
	--background: #0f0f0f;
	--color: #dfdfdf;
	--points: #ffffff;
	background: var(--background);
}

/* General text */
h1, h2, h3, b, input {
	display: inline;
	font-family: "Chakra Petch", sans-serif;
}

.background {
	background-image: var(--background-img);
	background-size: cover;
	background-repeat: no-repeat;
	background-position: center;
	filter: blur(5px);

	position: fixed;
	width: calc(100vw + 20px);
	height: calc(100vh + 20px);
	top: -10px;
	left: -10px;
	z-index: -1;
	opacity: 0;
	animation: bgZoom 1s forwards .2s;

	transition-duration: .4s;
	transition-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
}
.has-modal .background {
	transform: scale(0.95);
	filter: blur(20px);
}


#app {
	opacity: 0;
	animation: appZoom 1s forwards .2s;
}

/* These are styles for different states of components. You can make layer-specific versions with .c.locked, for example */
.locked {
	background-color: #bf8f8f;
	cursor: not-allowed;
}

/* Can meens can be clicked/bought/etc */
.can {
	cursor: pointer;
}

.can:hover {
	transform: scale(1.15, 1.15);
	box-shadow: 0 0 20px var(--points)
}

.bought {
	background-color: #77bf5f;
	cursor: default;
}

#points {
	color: var(--points);
	text-shadow: 0 0 10px var(--points);
}

@keyframes bgZoom {
	0% {
		scale: 1.1;
		opacity: 0;
	}
	100% {
		scale: 1;
		opacity: 0.6;
	}
}

@keyframes appZoom {
	0% {
		scale: 1.1;
		opacity: 0;
	}
	100% {
		scale: 1;
		opacity: 1;
	}
}

#timer {
	position: fixed;
	width: 100vw;
	height: 100vh;
	display: flex;
	justify-content: center;
}

#timer h1 {
	opacity: .15;
	font-size: 30vw;
	user-select: none;
	-webkit-user-select: none;
	transform: skewX(-4deg);
}
#timer h1 span {
	transition: none;
	display: inline-block;
	width: 1ch;
	font-family: inherit;
}

.shake {
	animation: shake .2s linear infinite;
}

@keyframes shake {
	0% { transform: translate(0, 0) rotate(0deg); }
	20% { transform: translate(1px, 1px) rotate(1deg); }
	40% { transform: translate(2px, -2px) rotate(-2deg); }
	60% { transform: translate(-2px, -2px) rotate(2deg); }
	80% { transform: translate(-1px, 1px) rotate(-1deg); }
	100% { transform: translate(0, 0) rotate(0deg); }
}